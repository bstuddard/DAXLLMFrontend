export default function(hljs) {
    const KEYWORDS = [
        "DEFINE", "EVALUATE", "MEASURE", "ORDER BY", "START AT", "VAR", "RETURN",
        "IN", "TRUE", "FALSE", "NOT", "ASC", "DESC"
    ];

    const FUNCTIONS = [
        "ABS", "ACCRINT", "ACCRINTM", "ACOS", "ACOSH", "ADDCOLUMNS", "ADDMISSINGITEMS",
        "ALL", "ALLCROSSFILTERED", "ALLEXCEPT", "ALLNOBLANKROW", "ALLSELECTED",
        "AVERAGE", "AVERAGEA", "AVERAGEX", "BETA.DIST", "BETA.INV", "BITAND",
        "BITLSHIFT", "BITOR", "BITRSHIFT", "BITXOR", "BLANK", "CALCULATE",
        "CALCULATETABLE", "CALENDAR", "CALENDARAUTO", "CEILING", "CHISQ.DIST",
        "CHISQ.DIST.RT", "CHISQ.INV", "CHISQ.INV.RT", "CLOSINGBALANCEMONTH",
        "CLOSINGBALANCEQUARTER", "CLOSINGBALANCEYEAR", "COALESCE", "COLLAPSE",
        "COLLAPSEALL", "COLUMNSTATISTICS", "COMBIN", "COMBINA", "COMBINEVALUES",
        "CONCATENATE", "CONCATENATEX", "CONFIDENCE.NORM", "CONFIDENCE.T", "CONTAINS",
        "CONTAINSROW", "CONTAINSSTRING", "CONTAINSSTRINGEXACT", "CONVERT", "COS",
        "COSH", "COT", "COTH", "COUNT", "COUNTA", "COUNTAX", "COUNTBLANK", "COUNTROWS",
        "COUNTX", "COUPDAYBS", "COUPDAYS", "COUPDAYSNC", "COUPNCD", "COUPNUM",
        "COUPPCD", "CROSSFILTER", "CROSSJOIN", "CUMIPMT", "CUMPRINC", "CURRENCY",
        "CURRENTGROUP", "CUSTOMDATA", "DATATABLE", "DATE", "DATEADD", "DATEDIFF",
        "DATESBETWEEN", "DATESINPERIOD", "DATESMTD", "DATESQTD", "DATESYTD",
        "DATEVALUE", "DAY", "DB", "DDB", "DEGREES", "DETAILROWS", "DISC", "DISTINCT",
        "DISTINCTCOUNT", "DISTINCTCOUNTNOBLANK", "DIVIDE", "DOLLARDE", "DOLLARFR",
        "DURATION", "EARLIER", "EARLIEST", "EDATE", "EFFECT", "ENDOFMONTH",
        "ENDOFQUARTER", "ENDOFYEAR", "EOMONTH", "ERROR", "EVALUATEANDLOG", "EVEN",
        "EXACT", "EXCEPT", "EXP", "EXPAND", "EXPANDALL", "EXPON.DIST", "EXTERNALMEASURE",
        "FACT", "FILTER", "FILTERS", "FIND", "FIRSTDATE", "FIRSTNONBLANK",
        "FIRSTNONBLANKVALUE", "FIXED", "FLOOR", "FORMAT", "FV", "GCD", "GENERATE",
        "GENERATEALL", "GENERATESERIES", "GEOMEAN", "GEOMEANX", "GROUPBY", "HASH",
        "HASONEFILTER", "HASONEVALUE", "HOUR", "IF", "IF.EAGER", "IFERROR", "IGNORE",
        "INDEX", "INT", "INTERSECT", "INTRATE", "IPMT", "ISAFTER", "ISATLEVEL",
        "ISBLANK", "ISCROSSFILTERED", "ISEMPTY", "ISERROR", "ISEVEN", "ISFILTERED",
        "ISINSCOPE", "ISLOGICAL", "ISNONTEXT", "ISNUMBER", "ISO.CEILING", "ISODD",
        "ISONORAFTER", "ISPMT", "ISSELECTEDMEASURE", "ISSUBTOTAL", "ISTEXT",
        "KEEPFILTERS", "KEYWORDMATCH", "LASTDATE", "LASTNONBLANK", "LASTNONBLANKVALUE",
        "LCM", "LEFT", "LEN", "LINEST", "LINESTX", "LN", "LOG", "LOG10", "LOOKUP",
        "LOOKUPVALUE", "LOWER", "MATCHBY", "MAX", "MAXA", "MAXX", "MDURATION",
        "MEDIAN", "MEDIANX", "MID", "MIN", "MINA", "MINUTE", "MINX", "MOD", "MONTH",
        "MOVINGAVERAGE", "MROUND", "NAMEOF", "NATURALINNERJOIN", "NATURALLEFTOUTERJOIN",
        "NETWORKDAYS", "NEXTDAY", "NEXTMONTH", "NEXTQUARTER", "NEXTYEAR", "NOMINAL",
        "NONVISUAL", "NORM.DIST", "NORM.INV", "NORM.S.DIST", "NORM.S.INV", "NOW",
        "NPER", "ODD", "ODDFPRICE", "ODDFYIELD", "ODDLPRICE", "ODDLYIELD", "OFFSET",
        "OPENINGBALANCEMONTH", "OPENINGBALANCEQUARTER", "OPENINGBALANCEYEAR", "OR",
        "ORDERBY", "PARALLELPERIOD", "PARTITIONBY", "PATH", "PATHCONTAINS",
        "PATHITEM", "PATHITEMREVERSE", "PATHLENGTH", "PDURATION", "PERCENTILE.EXC",
        "PERCENTILE.INC", "PERCENTILEX.EXC", "PERCENTILEX.INC", "PERMUT", "PI",
        "PMT", "POISSON.DIST", "POWER", "PPMT", "PREVIOUSDAY", "PREVIOUSMONTH",
        "PREVIOUSQUARTER", "PREVIOUSYEAR", "PRICE", "PRICEDISC", "PRICEMAT", "PRODUCT",
        "PRODUCTX", "PV", "QUARTER", "QUOTIENT", "RADIANS", "RAND", "RANDBETWEEN",
        "RANGE", "RANK", "RANK.EQ", "RANKX", "RATE", "RECEIVED", "RELATED",
        "RELATEDTABLE", "REMOVEFILTERS", "REPLACE", "REPT", "RIGHT", "ROLLUP",
        "ROLLUPADDISSUBTOTAL", "ROLLUPGROUP", "ROLLUPISSUBTOTAL", "ROUND", "ROUNDDOWN",
        "ROUNDUP", "ROW", "ROWNUMBER", "RRI", "RUNNINGSUM", "SAMEPERIODLASTYEAR",
        "SAMPLE", "SAMPLEAXISWITHLOCALMINMAX", "SAMPLECARTESIANPOINTSBYCOVER",
        "SEARCH", "SECOND", "SELECTCOLUMNS", "SELECTEDMEASURE", "SELECTEDMEASUREFORMATSTRING",
        "SELECTEDMEASURENAME", "SELECTEDVALUE", "SIGN", "SIN", "SINH", "SLN", "SQRT",
        "SQRTPI", "STARTOFMONTH", "STARTOFQUARTER", "STARTOFYEAR", "STDEV.P",
        "STDEV.S", "STDEVX.P", "STDEVX.S", "SUBSTITUTE", "SUBSTITUTEWITHINDEX",
        "SUM", "SUMMARIZE", "SUMMARIZECOLUMNS", "SUMX", "SWITCH", "SYD", "T.DIST",
        "T.DIST.2T", "T.DIST.RT", "T.INV", "T.INV.2T", "TAN", "TANH", "TBILLEQ",
        "TBILLPRICE", "TBILLYIELD", "TIME", "TIMEVALUE", "TOCSV", "TODAY", "TOJSON",
        "TOPN", "TOPNPERLEVEL", "TOPNSKIP", "TOTALMTD", "TOTALQTD", "TOTALYTD",
        "TREATAS", "TRIM", "TRUNC", "UNICHAR", "UNICODE", "UNION", "UPPER",
        "USERCULTURE", "USERELATIONSHIP", "USERNAME", "USEROBJECTID", "USERPRINCIPALNAME",
        "UTCNOW", "UTCTODAY", "VALUE", "VALUES", "VAR.P", "VAR.S", "VARX.P", "VARX.S",
        "VDB", "WEEKDAY", "WEEKNUM", "WINDOW", "XIRR", "XNPV", "YEAR", "YEARFRAC",
        "YIELD", "YIELDDISC", "YIELDMAT"
    ];

    const TYPES = [
        "BINARY", "BOOLEAN", "CURRENCY", "DATETIME", "DECIMAL", "INTEGER", "STRING", "VARIANT"
    ];

    const OPERATOR = {
        className: "operator",
        begin: /[-+*/^&]|==?|<>|[<>]=?|\&\&|\|\|/,
        relevance: 0
    };

    const PUNCTUATION = {
        className: "Punctuation",
        begin: /[;:()\[\]\{\},.]/,
        relevance: 0
    };

    const NUMBER = {
        className: 'number',
        begin: /\b-?\d+(e\d+)?(\.\d+)?/,
        relevance: 0
    };

    const STRING = {
        className: 'string',
        begin: /"(?:[^"]|"")*"(?!")/gm
    };

    const TABLECOLUMN = {
        className: 'entity',
        begin: /'(?:[^']|'')*'(?!')\[.+?\]|\w+\[.+\]/,
        relevance: 0
    };

    return {
        name: 'DAX',
        case_insensitive: true,
        keywords: {
            keyword: KEYWORDS,
            built_in: FUNCTIONS,
            type: TYPES
        },
        contains: [
            hljs.COMMENT('--', '$'),
            hljs.C_BLOCK_COMMENT_MODE,
            TABLECOLUMN,
            STRING,
            NUMBER,
            OPERATOR,
            PUNCTUATION
        ]
    };
}